package org.cafienne.persistence.eventdb.schema.hsqldb

import org.cafienne.infrastructure.Cafienne
import org.cafienne.persistence.eventdb.schema.ClassicEventDBSchemaScript

class V1_1_14__CreateAkkaSchema extends ClassicEventDBSchemaScript {
  val version = "1.1.14"

  val description = "CreateAkkaSchemaJournal"

  val scriptName = "org.cafienne.persistence.schema.V1_1_14__CreateAkkaSchemaJournal"

  override def getChecksum: Integer = 1702145588

  override def sql: String = {
    s"""CREATE TABLE IF NOT EXISTS "PUBLIC"."${Cafienne.config.persistence.tablePrefix}event_journal" (
       |  ordering BIGINT UNIQUE GENERATED BY DEFAULT AS IDENTITY,
       |  persistence_id VARCHAR(255) NOT NULL,
       |  sequence_number BIGINT NOT NULL,
       |  deleted BOOLEAN DEFAULT FALSE NOT NULL,
       |  writer VARCHAR(255) NOT NULL,
       |  write_timestamp BIGINT,
       |  adapter_manifest VARCHAR(255),
       |  event_ser_id INTEGER NOT NULL,
       |  event_ser_manifest VARCHAR(255) NOT NULL,
       |  event_payload BLOB NOT NULL,
       |  meta_ser_id INTEGER,
       |  meta_ser_manifest VARCHAR(255),
       |  meta_payload BLOB,
       |  PRIMARY KEY(persistence_id, sequence_number)
       |);
       |""".stripMargin
  }
  //CREATE UNIQUE INDEX "PUBLIC"."${Cafienne.config.persistence.tablePrefix}event_journal_ordering_idx" ON "PUBLIC"."${Cafienne.config.persistence.tablePrefix}event_journal" (ordering);
}
